<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Overlay Capture Architecture Converter</title>
    <style>
      body {
        background-color: #3a3939;
        color: #beaa6b;
        margin: 10px;
      }
      .column {
        width: 100%;
        margin: 5px;
      }
      a {
        color: #ffd54d;
      }
      input, label {
        display: block;
      }

      input {
        margin-bottom: 10px;
      }

      @media (min-width: 768px) {
        body{ margin: 50px; }
        .column {
          width: 45%;
          float: left;
          margin: 20px;
        }
      }

    </style>

  </head>
  <body>
    <h1> Overlays Capture Architecture Converter </h1>
    <hr/>
    <div class="column">
      <h2> Try it! </h2>
      <p> Tool allow you to convert properly prepared xls(x) file to OCA. As an outcome you would receive a zip file which would include capture base object and all overlays within JSON format</p>
      <label>Select OCA root file *</label>
      <input type="file" id="chooseFile" accept=".xls,.xlsx" />
      <label>Select OCA references files</label>
      <input type="file" id="chooseReferencesFiles" accept=".xls,.xlsx" multiple />
      <label>Select Credential Layout file</label>
      <input type="file" id="chooseCredentialLayoutFile" accept=".yml,.yaml" />
      <label>Select Form Layout file</label>
      <input type="file" id="chooseFormLayoutFile" accept=".yml,.yaml" />
      <label>Generate Data Entry file</label>
      <input type="checkbox" id="withDataEntry" />
      <input type="submit" id="submit" />
      </div>
      <div class="column">
          <h2>  Learn more </h2>
          <p> Official website: <a href="https://oca.colossi.network/">https://oca.colossi.network/</a> </p>
          <p> <a href="https://github.com/THCLab/oca-html-preview-demo/tree/main/examples"> Layout examples </a>
      </div>

      <script>
      const fd = new FormData();
      document.querySelector("#chooseFile")
        .addEventListener("change", (e) => {
          const file = e.target.files[0];
          fd.append('file', file);
        });
      document.querySelector("#chooseReferencesFiles")
        .addEventListener("change", (e) => {
          const files = e.target.files;
          for (let i = 0; i < files.length; i++) {
            const file = files[i]
            fd.append('referencesFiles[]', file);
          }
        });
      document.querySelector("#chooseCredentialLayoutFile")
        .addEventListener("change", (e) => {
          const file = e.target.files[0];
          fd.append('credentialLayoutFile', file);
        });
      document.querySelector("#chooseFormLayoutFile")
        .addEventListener("change", (e) => {
          const file = e.target.files[0];
          fd.append('formLayoutFile', file);
        });
      document.querySelector("#withDataEntry")
        .addEventListener("change", (e) => {
          console.log(e.target.checked);
          const withDataEntry = e.target.checked;
          fd.append('withDataEntry', withDataEntry);
        });

      document.querySelector("#submit")
        .addEventListener("click", (_e) => {
          if (!fd.has('file')) {
            alert('OCA file is required!');
          } else {
            const xhr = new XMLHttpRequest();
            xhr.responseType = 'json'
            xhr.open('POST', '/', true);
            xhr.onload = () => {
              if (xhr.status === 200) {
                if (xhr.response.success) {
                  const fileUrl = xhr.responseURL + xhr.response.filename
                  window.history.pushState("", "", fileUrl);
                  window.location.replace(fileUrl);
                } else {
                  console.error(xhr.response.error)
                }
              }
            };

            xhr.send(fd);
          }
        });
    </script>
  </body>
</html>
